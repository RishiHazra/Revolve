[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.10"
namespace_packages = true
incremental = false
# Removed cache_dir to use default caching behavior
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false
allow_redefinition = true
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
strict_optional = true
strict_equality = true
explicit_package_bases = true
follow_imports = "skip"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "mpl_toolkits.*",
    "gym.*",
    "pytest_mock.*",
    "numpy.*",
    "tree.*",
    "pytest.*",
    "IPython.*",
    "tensorboardX.*",
    "scipy.*",
    "hydra.*",
    "omegaconf.*",
]
ignore_missing_imports = true

[tool.flake8]
select = ["A","B","C","D","E","F","G","I","N","T","W"]
exclude = [
    ".tox",
    ".git",
    "__pycache__",
    "build",
    "dist",
    "proto/*",
    "*.pyc",
    "*.egg-info",
    ".cache",
    ".eggs",
]

max-line-length = 100
max-cognitive-complexity = 18
import-order-style = "google"
doctests = true
docstring-convention = "google"

ignore = [
    "A002",  # Argument shadowing a Python builtin.
    "A003",  # Class attribute shadowing a Python builtin.
    "D107",  # Do not require docstrings for __init__.
    "E266",  # Do not require block comments to only have a single leading #.
    "E731",  # Do not assign a lambda expression, use a def.
    "W503",  # Line break before binary operator (not compatible with black).
    "B017",  # assertRaises(Exception): or pytest.raises(Exception) should be considered evil.
    "E203",  # black and flake8 disagree on whitespace before ':'.
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "revolve"
readme = "README.md"
description = "REvolve: Reward Evolution with Large Language Models using Human Feedback"
authors = [
    { name = "Rishi Hazra", email = "rishi.hazra@oru.se" },
    { name = "Alkis Sygkounas", email = "alkis.sygkounas@oru.se" }
]
requires-python = ">=3.10"
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "openai",
    "hydra-core==1.3.2",
    "scipy",
    "matplotlib",
    "absl-py",
    "aiosignal",
    "aiohttp",
    "async-timeout",
    "blinker",
    "brotli",
    "frozenlist",
    "gast",
    "google-auth",
    "google-auth-oauthlib",
    "google-pasta",
    "h5py==3.10.0",
    "markdown",
    "multidict",
    "oauthlib",
    "opt_einsum",
    "protobuf",
    "pyasn1",
    "pyasn1-modules",
    "pyjwt",
    "pyopenssl",
    "requests-oauthlib",
    "rsa",
    "tensorboard-data-server==0.6.1",
    "tensorboard-plugin-wit==1.8.1",
    "termcolor",
    "werkzeug",
    "wrapt",
    "yarl",
    "mujoco==2.3.7",
    "gymnasium[mujoco]==0.29.1",
    "gymnasium-robotics==1.2.4",
    "gymnasium==0.29.1",
    "stable-baselines3==2.3.2",
    "tensorboard==2.10.1"
]

[tool.setuptools.packages.find]
include = [
    "evolutionary_utils",
    "human_feedback",
    "prompts",
    "rl_agent"
]
exclude = [
    "__pycache__",
    "evolutionary_utils/__pycache__",
    "prompts/__pycache__",
    "rl_agent/__pycache__",
    "cfg"
]